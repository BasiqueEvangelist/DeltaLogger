plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	repositories {
		maven {
			url = "https://maven.nucleoid.xyz"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//DL Dependencies
	implementation(include('com.zaxxer:HikariCP:3.4.2'))
	implementation(include('org.jdbi:jdbi3-core:3.12.2'))
	include 'org.antlr:antlr4-runtime:4.8'
	include 'com.github.ben-manes.caffeine:caffeine:2.8.0'
	include 'io.leangen.geantyref:geantyref:1.3.7'
	include 'org.slf4j:slf4j-api:1.7.25'
	implementation(include('org.jdbi:jdbi3-sqlite:3.12.2'))
	implementation(include('org.xerial:sqlite-jdbc:3.32.3.2'))
	implementation(include('mysql:mysql-connector-java:8.0.19'))
	implementation(include('com.graphql-java:graphql-java:16.1'))
	include 'com.graphql-java:java-dataloader:2.2.3'
	include 'org.reactivestreams:reactive-streams:1.0.3'
	implementation(include('com.auth0:java-jwt:3.11.0'))
	implementation(include('io.javalin:javalin:3.12.0'))
	implementation(include('io.javalin:javalin-graphql:3.12.0'))
	//compile('org.slf4j:slf4j-simple:1.7.30')
	//compile('org.slf4j:slf4j-api:1.8.0-beta4')
	//compile('org.slf4j:slf4j-simple:1.8.0-beta4')
	include 'com.fasterxml.jackson.core:jackson-core:2.6.3'
	include 'com.fasterxml.jackson.core:jackson-annotations:2.6.3'
	include 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
	include 'org.slf4j:slf4j-simple:1.7.30'
	implementation(include('io.vavr:vavr:0.10.3'))
	modImplementation 'fr.catcore:server-translations-api:1.4.0'
	include 'fr.catcore:server-translations-api:1.4.0'

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}